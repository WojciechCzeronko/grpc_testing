plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.21'
    id 'com.google.protobuf' version '0.9.4'
}

group 'org.czer.grpc_app'
version '1.0-SNAPSHOT'




compileKotlin {
    kotlinOptions.jvmTarget = "17"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "17"
}



allprojects{

    sourceSets {
        main {
            proto {
                srcDir "$projectDir/src/main/kotlin/proto"
            }
        }
    }

    repositories {
        mavenCentral()
    }

    apply plugin: "java"
    apply plugin: "com.google.protobuf"

    dependencies {
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${version_kotlinx}"
        implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:${version_kotlinx}"


        implementation "io.grpc:grpc-kotlin-stub:$version_grpc_kotlin"
        implementation "io.grpc:grpc-protobuf:$version_grpc"
        implementation "io.grpc:grpc-netty:$version_grpc"
        implementation "io.grpc:grpc-stub:$version_grpc"

        implementation "org.slf4j:slf4j-simple:2.0.13"
        implementation "org.slf4j:slf4j-api:2.0.13"


        implementation "org.jetbrains.kotlin:kotlin-stdlib"

        implementation "org.testng:testng:$version_testng"
    }

    protobuf {
        protoc {
            artifact = "com.google.protobuf:protoc:$version_protobuf"
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:$version_grpc"
            }
            grpckt {
                artifact = "io.grpc:protoc-gen-grpc-kotlin:$version_grpc_kotlin:jdk8@jar"
            }
        }
        generateProtoTasks {
            all().forEach { task ->
                task.plugins {
                    grpc {}
                    grpckt {}
                }
            }
        }

    }

    test {
        useJUnitPlatform()
        useTestNG(){
            outputDirectory = file("$projectDir/report/")
            useDefaultListeners = true
        }
    }
}

